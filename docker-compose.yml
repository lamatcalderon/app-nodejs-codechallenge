version: "3.7"
services:
  postgres:
    image: postgres:14
    container_name: postgres_yape
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    restart: unless-stopped   
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql  
  mongodb:
    image: mongo:latest
    container_name: mongodb_yape
    ports:
      - "27017:27017"    
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
  transaction:      
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
      args:
        IMAGE_NAME: transaction
    image: ${IMAGE_NAME:-transaction}:latest
    container_name: transaction-service
    ports:
      - 3000:3000
    environment:
      NODE_ENV: dev
    depends_on: [postgres, mongodb, zookeeper, kafka]
  antifraud:      
    build:
      context: ./antifraud-service
      dockerfile: Dockerfile
      args:
        IMAGE_NAME: antifraud
    image: ${IMAGE_NAME:-antifraud}:latest
    container_name: antifraud-service
    ports:
      - 3001:3001
    environment:
      NODE_ENV: dev      
    depends_on: [postgres, mongodb, zookeeper, kafka]
